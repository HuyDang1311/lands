<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">
	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<http use-expressions="true">
		<csrf disabled="true" />
		<intercept-url pattern="/admin" access="hasAnyRole('ROLE_admin', 'ROLE_Mod', 'ROLE_TrialMod')" />
		<intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_admin', 'ROLE_Mod', 'ROLE_TrialMod')" />
<!-- 		<intercept-url pattern="/admin/lands/add" access="hasRole('ROLE_TrialMod')" /> -->
<!-- 		<intercept-url pattern="/admin/lands" access="hasAnyRole('ROLE_admin', 'ROLE_Mod', 'ROLE_TrialMod')" /> -->
		
<!-- 		<intercept-url pattern="/admin/" access="hasAnyRole('ROLE_admin', 'ROLE_Mod', 'ROLE_TrialMod')" /> -->
<!-- 		<intercept-url pattern="/admin/cat" access="hasAnyRole('ROLE_admin', 'ROLE_Mod', 'ROLE_TrialMod')" /> -->
<!-- 		<intercept-url pattern="/admin/lands" access="hasAnyRole('ROLE_admin', 'ROLE_Mod', 'ROLE_TrialMod')" /> -->
		
		<intercept-url pattern="/**" access="permitAll()" />

		<access-denied-handler error-page="/403" /> 

		<form-login login-page='/login' login-processing-url="/login"
			default-target-url="/admin" always-use-default-target="false"
			authentication-failure-url="/login?error=loginErr"
			username-parameter="username" password-parameter="password" />

		<logout logout-url="/logout" logout-success-url="/login"
			delete-cookies="JSESSIONID" invalidate-session="true" />

	</http>

	 <authentication-manager>
		<!-- authentication from database -->
		<authentication-provider>
			<password-encoder hash="bcrypt" ref="encoder"/>

			<jdbc-user-service data-source-ref="myDataSource"
				users-by-username-query="SELECT username, password, enable FROM users WHERE username=?"
				authorities-by-username-query="SELECT username, concat('ROLE_', r.rankname) rankname FROM users AS u INNER JOIN rank AS r ON u.rank_id = r.id WHERE username = ?" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>